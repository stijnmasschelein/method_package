---
title: Descriptive statistics
---

# Setup

```{r}
#| label: setup
library(tidyverse)
library(lubridate)
library(here)
library(kableExtra)
library(cowplot)
theme_set(theme_cowplot(font_size = 18))
i_am("freaky_friday/descriptive.qmd")
```

```{r}
#| label: data
main <- readRDS(here("data", "freaky_friday", "main.RDS")) %>%
  mutate(group = if_else(weekday == "Fri", "Friday", "Non-Friday"),
         year = year(anndat))
glimpse(main)
```

# Panel A


The actual calculations are just in the `summarise` and the first `mutate` statement. I then calculate the totals and add them to the data with `bind_rows`. The numerical values get rounded to present them a bit nicer. The double pivot transposes the table so that rows become columns. Finally, I fix the order of the columns and use `kable` to present the table.

```{r}
#| label: Panel-A
summarise(main, .by = weekday,
          Number = n()) %>%
  mutate(Fraction = Number / sum(Number)) %>%
  bind_rows(summarise(.,
                      across(c(Number, Fraction), sum)) %>%
            mutate(weekday = "All")) %>%
  mutate(Fraction = format(Fraction, digits = 2),
         Number = format(Number)) %>%
  pivot_longer(-weekday) %>%
  pivot_wider(names_from = weekday) %>%
  select(All, Mon, Tue, Wed, Thu, Fri) %>%
  kable(format = "markdown")
```

Overall, my data has more than 10,000 fewer observations but the percentage of announcements per weekday matches the table in the paper pretty closely. That means I did something right.

# Panel B: Baseline Sample

```{r}
#| label: Panel-B-baseline-1
panelb <- main %>%
  mutate(month = month(anndat),
         month_quarter = (month - 1) %% 3 + 1) %>%
  select(group, surprise, market_value, year, month_quarter) %>%
  mutate(market_value = market_value / 1e3)

summarise(panelb, .by = group,
          across(c(surprise, market_value, year),
                 list(mean = mean, sd = sd))) %>%
  kable(format = "markdown")

summarise(panelb,
          across(c(surprise, market_value, year),
                 ~ list(t.test(.x ~ group)))
          ) %>%
  pivot_longer(c(surprise, market_value, year)) %>%
  mutate(
    diff = map_dbl(value, ~ .x$estimate[1] - .x$estimate[2]),
    stderr = map_dbl(value, ~ .x$stderr),
    pvalue = map_dbl(value, ~ .x$p.value)) %>%
  select(-value) %>%
  kable(format = "markdown")
```

I am not really sure that the statistical test for the month in the quarter makes sense. So I am not going to do these.

```{r}
#| label: Panel-B-Baseline-2
summarise(panelb, .by = c(group, month_quarter),
          N = n()) %>%
  mutate(fraction = N/sum(N), .by = group) %>%
  select(-N) %>%
  pivot_wider(names_from = group, values_from = fraction) %>%
  kable(format = "markdown", digits = 3)
```

@dellavigna2009 also report the same statistic for the a homogeneous sample with at least 10% of the observations on Friday and on non-Fridays. This is an example of asking the question where the variation is coming from in the sample and what the true comparison is that we want to make. In the full sample, we could be comparing *firms* that report on Friday to firms that do not. In the homogeneous sample, we are more likely to compare *years* where the same firm reports on Friday and *years* where they do not. The same question came up when we talked about compliers, always treated and never treated observations in the context of instrumental variables.

```{r}
homogeneous <- main %>%
  mutate(perc_friday = sum(weekday == "Fri")/n(),
        .by = gvkey) %>%
  filter(perc_friday > .1, perc_friday < .9) %>%
  glimpse()
```

I'll leave the descriptive statistics for the homogeneous sample as an exercise for the reader.

# Figure 1

## Quantiles

```{r}
#| label: quantiles
quantiles <- main %>%
  mutate(sign = case_when(surprise > 0 ~ "positive",
                          surprise < 0 ~ "negative",
                          surprise == 0 ~ "zero")) %>%
  mutate(
    quintile = ntile(surprise, 5),
    .by = c(sign, year)) %>%
  mutate(
    quantile = case_when(sign == "positive" ~ 6 + quintile,
                         sign == "negative" ~ quintile,
                         sign == "zero" ~ 6
                         )
  ) %>%
  glimpse()
```

This is a quick version of Figure 1a. It can be further cleaned up with a better axis labels. It shows the main results from @dellavigna2009 that the market reaction is subdued on Fridays. 

```{r}
#| label: figure1a
ggplot(quantiles,
       aes(y = car_short, x = quantile, group = group, colour = group)) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .2) +
  stat_summary(fun.y = mean, geom = "line") +
  scale_color_grey()
```

This is how I would program Figure 1a and b together. It's a good example of how using `pivot_longer` can make your life easier. In this case, if we need to plot multiple similar variables.

```{r}
#| label: figure1ab
#| fig-height: 8
quantiles %>%
  pivot_longer(c(car_short, car_long), values_to = "car", names_to = "window") %>%
  mutate(fig_name = if_else(window == "car_short", "Figure 1a", "Figure 1b")) %>%
  ggplot(aes(y = car, x = quantile, group = group, colour = group)) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .2) +
  stat_summary(fun = mean, geom = "line") +
  scale_color_grey() +
  facet_wrap(~ fig_name, nrow = 2)
```
